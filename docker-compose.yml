version: '2'

services:

### Applications Code Container #############################

    applications:
        image: tianon/true
        volumes:
            - ${APPLICATIONS}:/var/www
            - ./ssl/:/etc/ssl

### Node and Workspace Container #######################################

    node:
        hostname: localhost
        dns:
          - "8.8.8.8"
          - "8.8.4.4"
        dns_search: '' #fix for windows dns resolve.conf
        build:
            context: ./node
            args:
              - TZ=${NODE_TIMEZONE}
            dockerfile: "Dockerfile"
        volumes_from:
            - applications
        extra_hosts:
            - "dockerhost:${DOCKER_HOST_IP}"
            - "${EXTRA_HOST}:127.0.0.1"
        ports:
            - "3000"
            - "${NODE_SSH_PORT}:22"
        tty: true

### Workspace Utilities Container ###########################

    workspace:
        hostname: localhost
        dns:
          - "8.8.8.8"
          - "8.8.4.4"
        dns_search: '' #fix for windows dns resolve.conf
        build:
            context: ./workspace
            args:
                - INSTALL_XDEBUG=false
                - INSTALL_SOAP=false
                - INSTALL_MONGO=false
                - INSTALL_NODE=false
                - INSTALL_YARN=false
                - INSTALL_DRUSH=false
                - INSTALL_AEROSPIKE_EXTENSION=false
                - INSTALL_V8JS_EXTENSION=false
                - COMPOSER_GLOBAL_INSTALL=true
                - INSTALL_WORKSPACE_SSH=true
                - INSTALL_LARAVEL_ENVOY=false
                - INSTALL_DEPLOYER=false
                - INSTALL_LINUXBREW=false
                - PUID=1000
                - PGID=1000
                - NODE_VERSION=stable
                - YARN_VERSION=latest
                - TZ=UTC
        volumes_from:
            - applications
        extra_hosts:
            # IMPORTANT: Replace with your Docker Host IP (will be appended to /etc/hosts)
            - "dockerhost:${DOCKERHOST}"
        ports:
           - "${WORKSPACE_SSH_PORT}:22"
        tty: true

### PHP-FPM Container #######################################

    php-fpm:
        hostname: localhost
        dns:
          - "8.8.8.8"
          - "8.8.4.4"
        dns_search: '' #fix for windows dns resolve.conf
        build:
            context: ./php-fpm
            args:
                - INSTALL_XDEBUG=false
                - INSTALL_SOAP=true
                - INSTALL_MONGO=false
                - INSTALL_ZIP_ARCHIVE=true
                - INSTALL_BCMATH=false
                - INSTALL_PHPREDIS=false
                - INSTALL_MEMCACHED=true
                - INSTALL_OPCACHE=false
                - INSTALL_EXIF=false
                - INSTALL_AEROSPIKE_EXTENSION=false
                - CODEIGNITER=false
            dockerfile: Dockerfile-${PHP_VERSION}
        volumes_from:
            - applications
        ports:
            - "9000"
        extra_hosts:
            # IMPORTANT: Replace with your Docker Host IP (will be appended to /etc/hosts)
            - "dockerhost:${DOCKERHOST}"
        environment:
            # IMPORTANT: Set the Remote Interpreter entry matching name to `laravel`
            - PHP_IDE_CONFIG=serverName=laravel

### Nginx Server Container ##################################

    nginx:
        hostname: localhost
        dns:
          - "8.8.8.8"
          - "8.8.4.4"
        dns_search: '' #fix for windows dns resolve.conf
        build:
            context: ./nginx
        volumes_from:
            - applications
        volumes:
            - ${DATA_SAVE_PATH}/logs/nginx/:/var/log/nginx
            - ./nginx/sites/:/etc/nginx/sites-available
            - ./nginx/conf.d/:/etc/nginx/conf.d
        ports:
            - "${HTTP_PORT}:80"
            - "${HTTPS_PORT}:443"
        depends_on:
            - apache2

### Nginx Server Container ##################################

    nginx-node:
        hostname: localhost
        dns:
          - "8.8.8.8"
          - "8.8.4.4"
        dns_search: '' #fix for windows dns resolve.conf
        build:
            context: ./nginx
        volumes_from:
            - applications
        volumes:
            - ${DATA_SAVE_PATH}/logs/nginx-node/:/var/log/nginx
            - ./nginx/sites-node/:/etc/nginx/sites-available
            - ./nginx/conf.d-node/:/etc/nginx/conf.d
        ports:
            - "${HTTP_PORT}:80"
            - "${HTTPS_PORT}:443"
        depends_on:
            - node

### Apache Server Container #################################

    apache2:
        hostname: localhost
        dns:
          - "8.8.8.8"
          - "8.8.4.4"
        dns_search: '' #fix for windows dns resolve.conf
        build:
            context: ./apache2
            args:
                - PHP_SOCKET=php-fpm:${PHP_FPM}
        volumes_from:
            - applications
        volumes:
            - ${DATA_SAVE_PATH}/logs/apache2:/var/log/apache2
        ports:
            - "80"
            - "443"
        depends_on:
            - php-fpm


### MySQL Container #########################################

    mysql:
        hostname: localhost
        dns:
          - "8.8.8.8"
          - "8.8.4.4"
        dns_search: '' #fix for windows dns resolve.conf
        build:
            context: ./mysql
            args:
                - MYSQL_DATABASE=${DB_NAME}
                - MYSQL_USER=${DB_USER}
                - MYSQL_PASSWORD=${DB_PASS}
                - MYSQL_ROOT_PASSWORD=${DB_ROOT_PASS}
        volumes:
            - mysql:/var/lib/mysql
        ports:
            - "${DB_PORT}:3306"

### MariaDB Container #######################################

    mariadb:
        hostname: localhost
        dns:
          - "8.8.8.8"
          - "8.8.4.4"
        dns_search: '' #fix for windows dns resolve.conf
        build: ./mariadb
        volumes:
            - mariadb:/var/lib/mysql
        ports:
            - "${DB_PORT}:3306"
        environment:
            MYSQL_DATABASE: ${DB_NAME}
            MYSQL_USER: ${DB_USER}
            MYSQL_PASSWORD: ${DB_PASS}
            MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASS}


### Mailhog Container #########################################

    mailhog:
      hostname: localhost
      dns:
        - "8.8.8.8"
        - "8.8.4.4"
      dns_search: '' #fix for windows dns resolve.conf
      build: ./mailhog
      ports:
        - "1025:1025"
        - "8025:8025"

### MongoDB Container #######################################

    mongo:
        hostname: localhost
        dns:
          - "8.8.8.8"
          - "8.8.4.4"
        dns_search: '' #fix for windows dns resolve.conf
        build: ./mongo
        ports:
            - "${MONGODB_PORT}:27017"
        volumes:
            - ${DATA_SAVE_PATH}/mongo:/data/db
        command:
            - "mongod"
        # The first time comment out the auth section to setup a user
        # Afterwards enable the auth section for security
        #  - "--auth"


### Redis Container #########################################

    redis:
        hostname: localhost
        dns:
          - "8.8.8.8"
          - "8.8.4.4"
        dns_search: '' #fix for windows dns resolve.conf
        build: ./redis
        volumes:
            - redis:/data
        ports:
            - "${REDIS_PORT}:6379"


### Memcached Container #####################################

    memcached:
        hostname: localhost
        dns:
          - "8.8.8.8"
          - "8.8.4.4"
        dns_search: '' #fix for windows dns resolve.conf
        build: ./memcached
        volumes:
            - memcached:/var/lib/memcached
        ports:
            - "${MEMCACHED_PORT}:11211"
        links:
            - php-fpm

### Beanstalkd Container ####################################

    beanstalkd:
        hostname: localhost
        dns:
          - "8.8.8.8"
          - "8.8.4.4"
        dns_search: '' #fix for windows dns resolve.conf
        build: ./beanstalkd
        ports:
            - "${BEANSTALKD_PORT}:11300"
        privileged: true
        links:
            - php-fpm


### Beanstalkd Console Container ############################

    beanstalkd-console:
        hostname: localhost
        dns:
          - "8.8.8.8"
          - "8.8.4.4"
        dns_search: '' #fix for windows dns resolve.conf
        build: ./beanstalkd-console
        ports:
            - "${BEANCONSOLE_PORT}:2080"
        links:
            - beanstalkd

### phpMyAdmin Container ####################################

    phpmyadmin:
        hostname: localhost
        dns:
          - "8.8.8.8"
          - "8.8.4.4"
        dns_search: '' #fix for windows dns resolve.conf
        build: ./phpmyadmin
        environment:
            PMA_ARBITRARY: 1
            MYSQL_USER: ${DB_USER}
            MYSQL_PASSWORD: ${DB_PASS}
            MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASS}
        ports:
            - "${PHPMYADMIN_PORT}:80"
        links:
            # for mysql container
            - "${DB_HOST}:db"

### ElasticSearch Container #################################

    elasticsearch:
        hostname: localhost
        dns:
          - "8.8.8.8"
          - "8.8.4.4"
        dns_search: '' #fix for windows dns resolve.conf
        build: ./elasticsearch
        volumes:
            - elasticsearch-data:/usr/share/elasticsearch/data
            - elasticsearch-plugins:/usr/share/elasticsearch/data
        ports:
            - "${ELASTICSEARCH_PORT}:9200"
            - "9300:9300"
        links:
            - php-fpm

### Volumes Setup ###########################################

volumes:
    mysql:
        driver: "local"
    memcached:
        driver: "local"
    redis:
        driver: "local"
    mariadb:
        driver: "local"
    mongo:
        driver: "local"
    phpmyadmin:
        driver: "local"
    elasticsearch-data:
        driver: "local"
    elasticsearch-plugins:
        driver: "local"
    sessions:    ## nothing is connected to this (- ./data/sessions:/sessions)
        driver: "local"
