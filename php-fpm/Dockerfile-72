FROM php:7.2-fpm

MAINTAINER Ignatios Drakoulas <ignatios@drakoulas.gr>

#
#--------------------------------------------------------------------------
# Software's Installation
#--------------------------------------------------------------------------
#
# Installing tools and PHP extentions using "apt", "docker-php", "pecl",
#
#
#--------------------------------------------------------------------------
# Mandatory Software's Installation
#--------------------------------------------------------------------------
#

RUN apt-get update && \
    apt-get install -y --no-install-recommends \
        curl \
        libmemcached-dev \
        libz-dev \
        libpq-dev \
        libjpeg-dev \
        libpng-dev \
        libfreetype6-dev \
        libssl-dev \
        libmcrypt-dev \
        libxml2-dev \
        libc-client-dev \
        libkrb5-dev \
        poppler-utils \
        mariadb-client \
        htop

RUN pecl install mcrypt-1.0.1 && docker-php-ext-enable mcrypt

RUN docker-php-ext-install pdo_mysql

RUN docker-php-ext-install pdo_pgsql

RUN docker-php-ext-install mysqli

RUN docker-php-ext-install sockets

RUN docker-php-ext-install mbstring

#####################################
# GD
#####################################

# Install the PHP gd library
RUN docker-php-ext-configure gd \
        --enable-gd-native-ttf \
        --with-jpeg-dir=/usr/lib \
        --with-freetype-dir=/usr/include/freetype2 && \
    docker-php-ext-install gd


#
#--------------------------------------------------------------------------
# Optional Software's Installation
#--------------------------------------------------------------------------
#
# Optional Software's will only be installed if you set them to `true`
# in the `.env` before the build.
# Example:
#   INSTALL_BCMATH=false
#

#####################################
# SOAP
#####################################

ARG INSTALL_SOAP=false
ENV INSTALL_SOAP ${INSTALL_SOAP}

RUN if [ ${INSTALL_SOAP} = true ]; then \
    # Install the soap extension
    docker-php-ext-install soap \
;fi

#####################################
# XDEBUG
#####################################

ARG INSTALL_XDEBUG=false
ENV INSTALL_XDEBUG ${INSTALL_XDEBUG}

RUN if [ ${INSTALL_XDEBUG} = true ]; then \
    # Install the xdebug extension
    pecl install xdebug && \
    docker-php-ext-enable xdebug \
;fi

#####################################
# REDIS EXTENSION FOR PHP 7.0
#####################################

ARG INSTALL_PHPREDIS=false
ENV INSTALL_PHPREDIS ${INSTALL_PHPREDIS}

RUN if [ ${INSTALL_PHPREDIS} = true ]; then \
    # Install Php Redis Extension
    pecl install -o -f redis \
    &&  rm -rf /tmp/pear \
    &&  docker-php-ext-enable redis \
;fi

# Copy xdebug configration for remote debugging
COPY ./xdebug.ini /usr/local/etc/php/conf.d/xdebug.ini

#####################################
# MONGO
#####################################

ARG INSTALL_MONGO=false
ENV INSTALL_MONGO ${INSTALL_MONGO}

RUN if [ ${INSTALL_MONGO} = true ]; then \
    # Install the mongodb extension
    pecl install mongodb && \
    docker-php-ext-enable mongodb \
;fi


#####################################
# ZIP_ARCHIVE
#####################################

ARG INSTALL_ZIP_ARCHIVE=false
ENV INSTALL_ZIP_ARCHIVE ${INSTALL_ZIP_ARCHIVE}

RUN if [ ${INSTALL_ZIP_ARCHIVE} = true ]; then \
    # Install the zip extension
    docker-php-ext-install zip \
;fi


#####################################
# BCMATH
#####################################

ARG INSTALL_BCMATH=false
ENV INSTALL_BCMATH ${INSTALL_BCMATH}

RUN if [ ${INSTALL_BCMATH} = true ]; then \
    # Install the bcmath extension
    docker-php-ext-install bcmath \
;fi


#####################################
# MEMCACHED EXTENSION FOR PHP 7.0
#####################################

ARG INSTALL_MEMCACHED=false
ENV INSTALL_MEMCACHED ${INSTALL_MEMCACHED}

RUN if [ ${INSTALL_MEMCACHED} = true ]; then \
    # Install the php memcached extension
    curl -L -o /tmp/memcached.tar.gz "https://github.com/php-memcached-dev/php-memcached/archive/php7.tar.gz" \
    && mkdir -p memcached \
    && tar -C memcached -zxvf /tmp/memcached.tar.gz --strip 1 \
    && ( \
        cd memcached \
        && phpize \
        && ./configure \
        && make -j$(nproc) \
        && make install \
    ) \
    && rm -r memcached \
    && rm /tmp/memcached.tar.gz \
    && docker-php-ext-enable memcached \
;fi


#####################################
# EXIF
#####################################

ARG INSTALL_EXIF=false
ENV INSTALL_EXIF ${INSTALL_EXIF}

RUN if [ ${INSTALL_EXIF} = true ]; then \
    # Enable Exif PHP extentions requirements
    docker-php-ext-install exif \
;fi



#####################################
# OPCACHE
#####################################

ARG INSTALL_OPCACHE=false
ENV INSTALL_OPCACHE ${INSTALL_OPCACHE}

RUN if [ ${INSTALL_OPCACHE} = true ]; then \
    docker-php-ext-install opcache \
;fi

# Copy opcache configration
COPY ./opcache.ini /usr/local/etc/php/conf.d/opcache.ini

RUN if [ ${INSTALL_OPCACHE} = false ]; then \
    rm /usr/local/etc/php/conf.d/opcache.ini \
;fi


#####################################
# GETTEXT
#####################################

ARG INSTALL_GETTEXT=false
ENV INSTALL_GETTEXT ${INSTALL_GETTEXT}

RUN if [ ${INSTALL_GETTEXT} = true ]; then \
    docker-php-ext-install gettext \
;fi


#####################################
# IMAP
#####################################

ARG INSTALL_IMAP=false
ENV INSTALL_IMAP ${INSTALL_IMAP}

RUN if [ ${INSTALL_IMAP} = true ]; then \
 # Install the PHP IMAP extension
    docker-php-ext-configure imap --with-kerberos --with-imap-ssl && \
    docker-php-ext-install imap \
;fi


#####################################
# CODEIGNITER TOKENIZER
#####################################

ARG CODEIGNITER=false
ENV CODEIGNITER ${CODEIGNITER}

RUN if [ ${CODEIGNITER} = true ]; then \
    # Install Codeigniter PHP extentions requirements
     docker-php-ext-install tokenizer \
;fi


#
#--------------------------------------------------------------------------
# Final Touch
#--------------------------------------------------------------------------
#

ADD ./php-fpm.ini /usr/local/etc/php/conf.d
ADD ./php-fpm.conf /usr/local/etc/php-fpm.d/

RUN rm -r /var/lib/apt/lists/*

RUN usermod -u 1000 www-data

WORKDIR /var/www

CMD ["php-fpm"]

EXPOSE 9000
